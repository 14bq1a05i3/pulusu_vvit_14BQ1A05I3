name: Databricks CD with AAD Token

on:
  pull_request:
    types: [completed]
  push:
    paths:
      - "action.yml"
      - ".github/workflows/cd-aad.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
                    
      - name: install-databricks-cli
        uses: microsoft/install-databricks-cli@v1.0.0    
      
      - id: adb-login
        uses: Azure/azure-resource-login-action@v1.0.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-url: 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d
      
      - id: access-key
        name: Azure CLI script file
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            chmod +x $GITHUB_WORKSPACE/sample.sh
            $GITHUB_WORKSPACE/sample.sh
           
      - name: Login to AzureStack with Az Powershell
        uses: azure/login@releases/v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: 'AzureStack'
          enable-AzPSSession: true

      - id: az-access
        name: Run Az PowerShell Script Against AzureStack
        uses: azure/powershell@v1
        with:
          azPSVersion: '3.1.0'
          inlineScript: |
            hostname
            echo Get-AzAccessToken >> $token
            
            
      - name: set-databricks-token
        shell: bash
        run: |
          echo "DATABRICKS_TOKEN= ${{ steps.az-access.outputs.Token }}" >> $GITHUB_ENV
          
      - name: Import Databricks notebooks
        uses: ./
        with:
          databricks-host: "https://adb-2700622637314445.5.azuredatabricks.net/oauth/authorize"
          databricks-token: ${{ steps.az-access.outputs.Token }}
          local-path: ./notebooks
          remote-path: /import-notebook
